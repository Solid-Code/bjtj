
daemon off;

user nginx;
pid /run/nginx.pid;
worker_processes 1;

events {
    worker_connections 1024;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # These files should be symlinks to /dev/stdout
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";


    ##
    # NodeJS Backend
    ##

    upstream node {
      server node:3000;
    }


    ##
    # HTTP server configuration
    ##

    server {

        listen 80;
        server_name $hostname;

        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt/;
        }

        location / {
            return 301 https://$host$request_uri;
        }

    }


    ##
    # HTTPS server configuration
    ##

    server {

        listen 443 ssl;
        server_name $hostname;

        ##
        # SSL Setup
        ##

        ssl_dhparam         /etc/ssl/dhparam.pem;
        ssl_certificate     /etc/certs/fullchain.pem;
        ssl_certificate_key /etc/certs/privkey.pem;

        ssl_session_cache shared:le_nginx_SSL:1m;
        ssl_session_timeout 1440m;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_ecdh_curve secp384r1;

        ##
        # Routing
        ##

        port_in_redirect off;

        # Remove .html suffix & trailing /
        rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
        rewrite ^/(.*)/$ /$1 permanent;

        # Remove /static/ prefix
        rewrite ^/static/(.*)$ /$1 permanent;

        # Display /index as /
        rewrite ^/index$ / permanent;

        root /var/www/static/;

        location = / {
            # try_files /index.html /404.html =404;
            proxy_pass http://node;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
        }

        location /api {
            proxy_pass http://node;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
        }

        location / {
            try_files $uri $uri.html $uri/ /404.html =404;
        }

    }
}

